==============
``print_square(size)``
==============

::

	>>> p = __import__('4-print_square').print_square
	>>> p(7)
	#######
	#######
	#######
	#######
	#######
	#######
	#######

::

	>>> p()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: print_square() missing 1 required positional argument: 'size'

::

	>>> p('g')
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	    raise TypeError("size must be an integer")
	TypeError: size must be an integer

::

	>>> p(t)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	NameError: name 't' is not defined

::

	>>> p(0)

::

	>>> p(-1)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	    raise ValueError("size must be >= 0")
	ValueError: size must be >= 0

::

	>>> p(-1.3)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	    raise TypeError("size must be an integer")
	TypeError: size must be an integer

::

	>>> p(1.2)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	    raise TypeError("size must be an integer")
	TypeError: size must be an integer

::

	>>> p([])
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	    raise TypeError("size must be an integer")
	TypeError: size must be an integer

